// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// --- //
// vga //
// --- //

#define vga_wrap_target 2
#define vga_wrap 11

static const uint16_t vga_program_instructions[] = {
    0xf001, //  0: set    pins, 1         side 1     
    0x7060, //  1: out    null, 32        side 1     
            //     .wrap_target
    0x6230, //  2: out    x, 16           side 0 [2] 
    0x0243, //  3: jmp    x--, 3          side 0 [2] 
    0x712a, //  4: out    x, 10           side 1 [1] 
    0x1245, //  5: jmp    x--, 5          side 1 [2] 
    0x70a6, //  6: out    pc, 6           side 1     
    0x7230, //  7: out    x, 16           side 1 [2] 
    0x7108, //  8: out    pins, 8         side 1 [1] 
    0x1048, //  9: jmp    x--, 8          side 1     
    0x7230, // 10: out    x, 16           side 1 [2] 
    0x124b, // 11: jmp    x--, 11         side 1 [2] 
            //     .wrap
    0xf001, // 12: set    pins, 1         side 1     
    0x7030, // 13: out    x, 16           side 1     
    0x124e, // 14: jmp    x--, 14         side 1 [2] 
    0x100a, // 15: jmp    10              side 1     
    0xf000, // 16: set    pins, 0         side 1     
    0x7030, // 17: out    x, 16           side 1     
    0x1252, // 18: jmp    x--, 18         side 1 [2] 
    0x100a, // 19: jmp    10              side 1     
};

#if !PICO_NO_HARDWARE
static const struct pio_program vga_program = {
    .instructions = vga_program_instructions,
    .length = 20,
    .origin = 0,
};

static inline pio_sm_config vga_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + vga_wrap_target, offset + vga_wrap);
    sm_config_set_sideset(&c, 1, false, false);
    return c;
}

static inline void vga_program_init(PIO pio, uint sm, uint offset, uint set_pin, uint set_pin_count, uint out_pin, uint out_pin_count, uint sideset_pin, float div) {
	pio_sm_config c = vga_program_get_default_config(offset);
	for (uint i=0;i<out_pin_count;i++) {
		pio_gpio_init(pio, (out_pin + i));
	}
	pio_gpio_init(pio, sideset_pin);
	pio_gpio_init(pio, set_pin);
	sm_config_set_sideset_pins(&c, sideset_pin);
	sm_config_set_out_pins(&c, out_pin, out_pin_count);
	sm_config_set_set_pins(&c, set_pin, set_pin_count);
	sm_config_set_clkdiv(&c, div);
	sm_config_set_out_shift(&c, true, true, 32);
	sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);
	pio_sm_set_consecutive_pindirs(pio, sm, set_pin, (out_pin_count + 2), true);
	pio_sm_init(pio, sm, offset, &c);
}

#endif

